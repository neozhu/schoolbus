@page "/"
@using ApexCharts
@using CleanArchitecture.Blazor.Application.Features.Dashboard.Dto;
@using CleanArchitecture.Blazor.Application.Features.Dashboard.Queries;
@using MudBlazor.Utilities
@using Blazor.Server.UI.Models
@using Theme=Blazor.Server.UI.Theme
@using Size=MudBlazor.Size
 
<PageTitle>@Title</PageTitle>
<style>
    .lp-app-grid {
        display: grid;
        gap: 24px;
        grid-template-columns: repeat(auto-fit,minmax(300px,1fr));
    }
</style>
<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6" >
                <MudIcon Icon="@Icons.Material.Filled.Castle" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalSchools</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/schools" class="mud-text-secondary">School</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.DirectionsBus" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalBuses</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/buses" class="mud-text-secondary">Bus</MudLink>
                
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.FollowTheSigns" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalPilots</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/drivers" class="mud-text-secondary">Drivers</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.LinearScale" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalItineraries</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/Itineraries" class="mud-text-secondary">Itineraries</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.Groups" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalStudents</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/students" class="mud-text-secondary">Students</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.EscalatorWarning" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalParents</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/Parents" class="mud-text-secondary">Parents</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.History" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalTransportLogs</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/TransportLogs" class="mud-text-secondary">Transport Logs</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="6" sm="3">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <MudIcon Icon="@Icons.Material.Filled.AirplaneTicket" Color="Color.Info" Size="Size.Large"></MudIcon>
                <div class="ml-3 d-flex flex-column">
                    <MudText Typo="Typo.h4">@SummaryInfo.TotalReports</MudText>
                    <MudLink Typo="Typo.body1" Href="/pages/TripReports" class="mud-text-secondary">Trip Reports</MudLink>
                </div>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="6">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <ApexChart @ref="chart1" TItem="TotalOfStudentDto" Height="350" Width="400"
                           Title="Percentage of Students per School">
                    <ApexPointSeries TItem="TotalOfStudentDto"
                                     Items="result.TotalOfStudent"
                                     SeriesType="SeriesType.Donut"
                                     Name="Count"
                                     XValue="@(e => e.SchoolName)"
                                     YAggregate="@(e => e.Sum(e => e.Count))"
                                     OrderByDescending="e=>e.Y" />
                </ApexChart>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="6">
            <MudPaper Class="d-flex align-center mud-width-full pa-6">
                <ApexChart @ref="chart2" TItem="TotalOfTransportDto" Height="350" Width="400"
                           Title="Percentage of Transports per Itinerary">
                   <ApexPointSeries TItem="TotalOfTransportDto"
                                     Items="result.TotalOfTransport"
                                     SeriesType="SeriesType.Donut"
                                     Name="Count"
                                     XValue="@(e => e.ItinerayName)"
                                     YAggregate="@(e => e.Sum(e => e.Count))"
                                     OrderByDescending="e=>e.Y" />
                </ApexChart>
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <ApexChart @ref="chart3" TItem="TotalOfMonthDto"
                       Title="Onboard of Students per Month">
                <ApexPointSeries TItem="TotalOfMonthDto"
                                 Items="result.TotalOfMonth"
                                 SeriesType="SeriesType.Bar"
                                 Name="Count"
                                 XValue="@(e => e.YearMonth)"
                                 YAggregate="@(e => e.Sum(e => e.Count))"
                                 OrderByDescending="e=>e.Y" />
            </ApexChart>
        </MudItem>
    </MudGrid>

    <IncrementCountComponent></IncrementCountComponent>
</MudContainer>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; } = default!;
    private UserProfile? UserProfile;
    public string Title { get; set; } = "Dashboard";
    private AggregationResult result = new AggregationResult();
    private SummaryDto SummaryInfo = new SummaryDto();

    ApexChart<TotalOfStudentDto>? chart1;
    ApexChart<TotalOfTransportDto>? chart2;
    ApexChart<TotalOfMonthDto>? chart3;
    protected override async void OnInitialized()
    {
        var authstate = await AuthState;
        if (authstate.User.Identity.IsAuthenticated)
        {
            UserProfile = authstate.User.GetUserProfileFromClaim();
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (UserProfile is not null)
            {
                result = await Mediator.Send(new SummaryQuery() { UserProfile = UserProfile });
                SummaryInfo = result.Summary;
                StateHasChanged();
                await chart1.UpdateSeriesAsync(true);
                await chart2.UpdateSeriesAsync(true);
                await chart3.UpdateSeriesAsync(true);
            }
        }
    }
     
    
}
